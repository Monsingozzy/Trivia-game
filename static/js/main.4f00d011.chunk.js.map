{"version":3,"sources":["component/QueenQuestion.js","App.js","reportWebVitals.js","index.js"],"names":["QueenQuestion","useState","posts","setPosts","ans","setans","result","setresult","useEffect","axios","get","then","response","data","question","type","required","onChange","e","target","value","className","onClick","simple","answer","replace","length","window","location","reload","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAIaA,EAAgB,WAAO,IAAD,EACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,OAEXF,mBAAS,IAFE,mBAE1BG,EAF0B,KAErBC,EAFqB,OAGLJ,mBAAS,2BAHJ,mBAG1BK,EAH0B,KAGlBC,EAHkB,KAKjCC,qBAAU,WACRC,IAAMC,IAAI,kCAAkCC,MAAK,SAACC,GAChDT,EAASS,EAASC,KAAK,SAExB,IAuBH,OACE,gCACE,4CACA,6BAAKX,EAAMY,WACX,mDACA,uBAAOC,KAAK,OAAOC,UAAQ,EAACC,SA1BZ,SAACC,GACnBb,EAAOa,EAAEC,OAAOC,QAyBqCA,MAAOhB,IAC1D,gCACE,wBAAQiB,UAAU,aAAaC,QAxBlB,WACjB,IAAIC,EAASrB,EAAMsB,OAAOC,QAAQ,eAAgB,KAI/B,IAAfrB,EAAIsB,OACNnB,GAAU,SAACW,GAAD,MAAY,yBAEtBX,EADSgB,IAAWnB,EACV,SAACc,GAAD,MAAY,gBAEZ,SAACA,GAAD,MAAY,kBAcpB,2BAGA,wBAAQG,UAAU,aAAaC,QAdvB,WACZK,OAAOC,SAASC,QAAO,IAanB,8BAIF,8BACE,oBAAIR,UAAU,SAAd,SAAwBf,UCzCjBwB,MAPf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCMSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.4f00d011.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\n\r\nexport const QueenQuestion = () => {\r\n  const [posts, setPosts] = useState({});\r\n  const [ans, setans] = useState(\"\");\r\n  const [result, setresult] = useState(\"Your Result Appear here\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://jservice.io/api/random\").then((response) => {\r\n      setPosts(response.data[0]);\r\n    });\r\n  }, []);\r\n  // console.log(posts.id, posts.answer, posts.question);\r\n  const checkingAns = (e) => {\r\n    setans(e.target.value);\r\n  };\r\n\r\n  const validating = () => {\r\n    let simple = posts.answer.replace(/[^A-Z0-9]+/gi, \" \");\r\n    // console.log(simple);\r\n    // console.log(ans.length);\r\n\r\n    if (ans.length === 0) {\r\n      setresult((e) => (e = \"Please Enter Answer\"));\r\n    } else if (simple === ans) {\r\n      setresult((e) => (e = \"Right Answer\"));\r\n    } else {\r\n      setresult((e) => (e = \"Wrong Answer\"));\r\n    }\r\n  };\r\n  const nextQ = () => {\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3> Question </h3>\r\n      <h1>{posts.question}</h1>\r\n      <h3>Enter your Answer</h3>\r\n      <input type=\"text\" required onChange={checkingAns} value={ans}></input>\r\n      <div>\r\n        <button className=\"button_ans\" onClick={validating}>\r\n          Submit Answer\r\n        </button>\r\n        <button className=\"button_ans\" onClick={nextQ}>\r\n          Next Question\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <h1 className=\"result\">{result}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { QueenQuestion } from \"./component/QueenQuestion\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QueenQuestion />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}